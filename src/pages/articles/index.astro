---
import Layout from "@layouts/Layout.astro";
import ThemeToggle from "@components/ThemeToggle.astro";
import { getCollection } from "astro:content";

const posts = await getCollection("articles");

const sortedPosts = posts.sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

function formatDate(date: Date) {
  return new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  }).format(date);
}
---

<Layout title="Blog Articles">
  <div class="fixed top-6 right-6 z-[9999]">
    <ThemeToggle />
  </div>

  <div class="flex flex-col min-h-[100dvh] relative">
    <div
      class="absolute inset-0 bg-gradient-to-br from-gray-50 via-gray-100 to-gray-200 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900"
    >
      <div
        class="absolute inset-0 opacity-[0.02] dark:opacity-[0.05]"
        style="background-image: radial-gradient(circle at 1px 1px, rgba(0,0,0,0.15) 1px, transparent 0); background-size: 20px 20px;"
      >
      </div>
    </div>

    <main class="relative z-50 flex-grow px-6 py-12 animate-blurIn">
      <div class="max-w-4xl mx-auto">
        <div class="grid gap-8 md:gap-12">
          {
            sortedPosts.map((post, index) => (
              <article
                class="group animate-fadeInUp"
                style={`animation-delay: ${600 + index * 100}ms`}
              >
                <a
                  href={`/articles/${post.slug}`}
                  class="block bg-white/50 dark:bg-gray-800/50 backdrop-blur-sm rounded-2xl p-8 hover:bg-white/70 dark:hover:bg-gray-800/70 transition-all duration-300 hover:scale-[1.02] hover:shadow-xl border border-gray-200/50 dark:border-gray-700/50"
                >
                  <div class="space-y-4">
                    <div class="flex items-center justify-between">
                      <time
                        datetime={post.data.date.toISOString()}
                        class="text-sm text-gray-500 dark:text-gray-400 font-medium"
                      >
                        {formatDate(new Date(post.data.date))}
                      </time>
                    </div>

                    <h2 class="text-2xl md:text-3xl font-semibold text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200">
                      {post.data.title}
                    </h2>

                    {post.data.description && (
                      <p class="text-gray-600 dark:text-gray-300 leading-relaxed">
                        {post.data.description}
                      </p>
                    )}

                    <div class="flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400" />
                  </div>
                </a>
              </article>
            ))
          }
        </div>

        {
          sortedPosts.length === 0 && (
            <div class="text-center py-16 animate-fadeInUp">
              <div class="w-24 h-24 mx-auto mb-6 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center">
                <svg
                  class="w-12 h-12 text-gray-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                  />
                </svg>
              </div>
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">
                Nenhum artigo encontrado
              </h3>
              <p class="text-gray-600 dark:text-gray-300">
                Os artigos aparecer√£o aqui quando forem publicados.
              </p>
            </div>
          )
        }
      </div>
    </main>

    <div class="relative z-50 pb-8 px-6">
      <div class="max-w-4xl mx-auto text-center">
        <a
          href="/"
          class="inline-flex items-center px-6 py-3 bg-gray-200/50 dark:bg-gray-700/50 backdrop-blur-sm rounded-xl hover:bg-gray-200/70 dark:hover:bg-gray-700/70 transition-all duration-200 text-gray-700 dark:text-gray-300 hover:scale-105 border border-gray-300/50 dark:border-gray-600/50"
        >
          <svg
            class="w-5 h-5 mr-2"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
          </svg>
          Home
        </a>
      </div>
    </div>
  </div>
</Layout>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes blurIn {
    from {
      opacity: 0;
      filter: blur(10px);
    }
    to {
      opacity: 1;
      filter: blur(0);
    }
  }

  .animate-fadeInUp {
    animation: fadeInUp 0.8s ease-out both;
  }

  .animate-blurIn {
    animation: blurIn 1s ease-out;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-400 {
    animation-delay: 0.4s;
  }
</style>s
