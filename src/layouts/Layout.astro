---
import '../styles/global.css';
import { ClientRouter } from 'astro:transitions';

export interface Props {
  title: string;
  lang: string;
}

const { title, lang } = Astro.props;
---

<!doctype html>
<html lang={lang}>
  <head>
    <script is:inline>
      const theme = localStorage.getItem('theme');
      const prefersDark = window.matchMedia(
        '(prefers-color-scheme: dark)',
      ).matches;
      const isDark = theme === 'dark' || (!theme && prefersDark);

      if (isDark) {
        document.documentElement.classList.add('dark');
      }
    </script>

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="description" content="Front-end Developer Portfolio" />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Roboto:ital,wght@0,400;0,500;0,700;1,400;1,500;1,700&family=Crimson+Text:ital,wght@0,400;0,600;1,400;1,600&display=swap&family=Trade+Winds&display=swap"
      rel="stylesheet"
    />

    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>

  <body>
    <slot />
  </body>
</html>

<ClientRouter />

<script>
  document.addEventListener('astro:after-swap', () => {
    const theme = localStorage.getItem('theme');
    const prefersDark = window.matchMedia(
      '(prefers-color-scheme: dark)',
    ).matches;
    const isDark = theme === 'dark' || (!theme && prefersDark);

    document.documentElement.classList.toggle('dark', isDark);
  });
</script>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }

  html {
    color-scheme: dark light;
  }
</style>
